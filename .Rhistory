r0=at$r0, r1=at$r1,
col=numbat:::cnv_colors[c(CNV_D$eventType)])
kpRect(kp, chr=CNV_D$chr, x0=0, x1=chrLen[CNV_D$chr], y0=0, y1=1)
}))+
theme(plot.margin=unit(c(0,0.03,0,0), "null"))
ypos=0.42
karyo_cnv <- karyo_cnv+
annotate(geom="text",
x=0.04, y=seq(ypos,ypos+0.31,length.out=length(segD)),
label=c("WGS",ords),
size=rel(2.3),
color="black",hjust = 0,fontface="bold")
karyo_cnv
wgs_seg <- combinedout$wgs_call[["patA"]] %>%
select(chr=seqnames,start,end,eventType) %>%
mutate(chr=paste0("chr",chr))
wgs_seg1 <- wgs_seg %>% filter(start<10^8)
gr <- makeGRangesFromDataFrame(wgs_seg1 %>% filter(chr=="chr7"), keep.extra.columns = TRUE)
max_gap <- 100000
merged <- reduce(gr, with.revmap=TRUE, ignore.strand=TRUE, min.gapwidth = max_gap + 1)
merged$eventType <- sapply(merged$revmap, function(idxs) {
subs  <- gr[idxs]
# widths of each sub-segment
w     <- width(subs)
# total bp per eventType
sums  <- tapply(w, subs$eventType, sum)
# choose the name of the eventType with max coverage
names(sums)[which.max(sums)]
})
# 5) back to a data.frame
final_df <- as.data.frame(merged)[, c("seqnames","start","end","eventType")]
colnames(final_df)[1] <- "chr"
wgs_df = rbind(final_df,wgs_seg %>% filter(start>10^8))
wgs_df
wgs_seg <- combinedout$wgs_call[["patA"]] %>%
select(chr=seqnames,start,end,eventType) %>%
mutate(chr=paste0("chr",chr))
wgs_seg1 <- wgs_seg %>% filter(start<10^8)
gr <- makeGRangesFromDataFrame(wgs_seg1 %>% filter(chr=="chr7"), keep.extra.columns = TRUE)
max_gap <- 100000
merged <- reduce(gr, with.revmap=TRUE, ignore.strand=TRUE, min.gapwidth = max_gap + 1)
merged$eventType <- sapply(merged$revmap, function(idxs) {
subs  <- gr[idxs]
# widths of each sub-segment
w     <- width(subs)
# total bp per eventType
sums  <- tapply(w, subs$eventType, sum)
# choose the name of the eventType with max coverage
names(sums)[which.max(sums)]
})
# 5) back to a data.frame
final_df <- as.data.frame(merged)[, c("seqnames","start","end","eventType")]
colnames(final_df)[1] <- "chr"
wgs_df = rbind(final_df,wgs_seg %>% filter(start>10^8))
dirs <- fs::dir_ls(path = "benchmark",
regexp = "patA_bin\\d+kb_outputs$",
type = "directory")
numbat_segL <- dirs %>%
set_names(~stringr::str_extract(.x, "bin\\d+kb")) %>%
map(~{
file_path <- file.path(.x, "segs_consensus_2.tsv")
if (file.exists(file_path)) {
readr::read_tsv(file_path, show_col_types = FALSE) %>%
select(chr = CHROM, start = seg_start, end = seg_end,
eventType = cnv_state_post) %>%
mutate(chr = paste0("chr", chr))
} else {
NULL
}
}) %>%
compact()
ords <- paste0("bin",c(50,80,100,200,300,500),"kb")
segD <- c(list("WGS"=wgs_df),numbat_segL[ords])
chrLen <- numbat::chrom_sizes_hg38$size %>%
setNames(paste0("chr",numbat::chrom_sizes_hg38$CHROM))
pp <- getDefaultPlotParams(1)
pp$data2height <- 50
karyo_cnv <- as.ggplot(expression(
kp <- plotKaryotype(plot.type=2, chromosomes=c("chr7"),
cex=0.9,
plot.params = pp),
nparts <- names(segD),
for(i in seq_along(nparts)) {
CNV_D <- segD[[i]]
at <- autotrack(i,length(nparts),margin = 0.05)
kpRect(kp, chr=CNV_D$chr,
x0=CNV_D$start,
x1=CNV_D$end,
y0=0.1, y1=0.85,
border="black",
lty=1, lwd=0.5,
r0=at$r0, r1=at$r1,
col=numbat:::cnv_colors[c(CNV_D$eventType)])
kpRect(kp, chr=CNV_D$chr, x0=0, x1=chrLen[CNV_D$chr], y0=0, y1=1)
}))+
theme(plot.margin=unit(c(0,0.03,0,0), "null"))
ypos=0.42
karyo_cnv <- karyo_cnv+
annotate(geom="text",
x=0.04, y=seq(ypos,ypos+0.31,length.out=length(segD)),
label=c("WGS",ords),
size=rel(2.3),
color="black",hjust = 0,fontface="bold")
karyo_cnv
combinedout <- readRDS("intmd/Combined_outputs_2025-02-21.rds")
wgs_seg <- combinedout$wgs_call[["patA"]] %>%
select(chr=seqnames,start,end,eventType) %>%
mutate(chr=paste0("chr",chr))
wgs_seg1 <- wgs_seg %>% filter(start<10^8)
gr <- makeGRangesFromDataFrame(wgs_seg1 %>% filter(chr=="chr7"), keep.extra.columns = TRUE)
max_gap <- 100000
merged <- reduce(gr, with.revmap=TRUE, ignore.strand=TRUE, min.gapwidth = max_gap + 1)
merged$eventType <- sapply(merged$revmap, function(idxs) {
subs  <- gr[idxs]
# widths of each sub-segment
w     <- width(subs)
# total bp per eventType
sums  <- tapply(w, subs$eventType, sum)
# choose the name of the eventType with max coverage
names(sums)[which.max(sums)]
})
# 5) back to a data.frame
final_df <- as.data.frame(merged)[, c("seqnames","start","end","eventType")]
colnames(final_df)[1] <- "chr"
wgs_df = rbind(final_df,wgs_seg %>% filter(start>10^8))
writeLines(wgs_df, "intmd/patA_wgs_seg.tsv")
data.table::fwrite(wgs_df, "intmd/patA_wgs_seg.tsv")
fread("intmd/patA_wgs_seg.tsv")
combinedout <- readRDS("intmd/Combined_outputs_2025-02-21.rds")
wgs_seg <- combinedout$wgs_call[["patA"]] %>%
select(chr=seqnames,start,end,eventType) %>%
mutate(chr=paste0("chr",chr))
wgs_seg1 <- wgs_seg %>% filter(start<10^8)
gr <- makeGRangesFromDataFrame(wgs_seg1 %>% filter(chr=="chr7"), keep.extra.columns = TRUE)
max_gap <- 100000
merged <- reduce(gr, with.revmap=TRUE, ignore.strand=TRUE, min.gapwidth = max_gap + 1)
merged$eventType <- sapply(merged$revmap, function(idxs) {
subs  <- gr[idxs]
# widths of each sub-segment
w     <- width(subs)
# total bp per eventType
sums  <- tapply(w, subs$eventType, sum)
# choose the name of the eventType with max coverage
names(sums)[which.max(sums)]
})
# 5) back to a data.frame
final_df <- as.data.frame(merged)[, c("seqnames","start","end","eventType")]
colnames(final_df)[1] <- "chr"
wgs_df = rbind(final_df,wgs_seg %>% filter(chr=="chr7")%>% filter(start>10^8))
data.table::fwrite(wgs_df, "intmd/patA_wgs_seg.tsv")
fread("intmd/patA_wgs_seg.tsv")
source("utils/mini_import.R")
source("utils/vis.R")
pacman::p_load(karyoploteR,
ggplotify,ggplot2,cowplot,
ggpubr)
wgs_df <- fread("intmd/patA_wgs_seg.tsv")
dirs <- fs::dir_ls(path = "benchmark",
regexp = "patA_bin\\d+kb_outputs$",
type = "directory")
numbat_segL <- dirs %>%
set_names(~stringr::str_extract(.x, "bin\\d+kb")) %>%
map(~{
file_path <- file.path(.x, "segs_consensus_2.tsv")
if (file.exists(file_path)) {
readr::read_tsv(file_path, show_col_types = FALSE) %>%
select(chr = CHROM, start = seg_start, end = seg_end,
eventType = cnv_state_post) %>%
mutate(chr = paste0("chr", chr))
} else {
NULL
}
}) %>%
compact()
ords <- paste0("bin",c(50,80,100,200,300,500),"kb")
segD <- c(list("WGS"=wgs_df),numbat_segL[ords])
chrLen <- numbat::chrom_sizes_hg38$size %>%
setNames(paste0("chr",numbat::chrom_sizes_hg38$CHROM))
pp <- getDefaultPlotParams(1)
pp$data2height <- 50
karyo_cnv <- as.ggplot(expression(
kp <- plotKaryotype(plot.type=2, chromosomes=c("chr7"),
cex=0.9,
plot.params = pp),
nparts <- names(segD),
for(i in seq_along(nparts)) {
CNV_D <- segD[[i]]
at <- autotrack(i,length(nparts),margin = 0.05)
kpRect(kp, chr=CNV_D$chr,
x0=CNV_D$start,
x1=CNV_D$end,
y0=0.1, y1=0.85,
border="black",
lty=1, lwd=0.5,
r0=at$r0, r1=at$r1,
col=numbat:::cnv_colors[c(CNV_D$eventType)])
kpRect(kp, chr=CNV_D$chr, x0=0, x1=chrLen[CNV_D$chr], y0=0, y1=1)
}))+
theme(plot.margin=unit(c(0,0.03,0,0), "null"))
ypos=0.42
karyo_cnv <- karyo_cnv+
annotate(geom="text",
x=0.04, y=seq(ypos,ypos+0.31,length.out=length(segD)),
label=c("WGS",ords),
size=rel(2.3),
color="black",hjust = 0,fontface="bold")
karyo_cnv
source("utils/mini_import.R")
source("utils/vis.R")
pacman::p_load(karyoploteR,
ggplotify,ggplot2,cowplot,
ggpubr)
wgs_df <- fread("intmd/patA_wgs_seg.tsv")
dirs <- fs::dir_ls(path = "benchmark",
regexp = "patA_bin\\d+kb_outputs$",
type = "directory")
numbat_segL <- dirs %>%
set_names(~stringr::str_extract(.x, "bin\\d+kb")) %>%
map(~{
file_path <- file.path(.x, "segs_consensus_2.tsv")
if (file.exists(file_path)) {
readr::read_tsv(file_path, show_col_types = FALSE) %>%
select(chr = CHROM, start = seg_start, end = seg_end,
eventType = cnv_state_post) %>%
mutate(chr = paste0("chr", chr))
} else {
NULL
}
}) %>%
compact()
ords <- paste0("bin",c(50,80,100,200,300,500),"kb")
segD <- c(list("WGS"=wgs_df),numbat_segL[ords])
chrLen <- numbat::chrom_sizes_hg38$size %>%
setNames(paste0("chr",numbat::chrom_sizes_hg38$CHROM))
pp <- getDefaultPlotParams(1)
pp$data2height <- 50
karyo_cnv <- as.ggplot(expression(
kp <- plotKaryotype(plot.type=2, chromosomes=c("chr7"),
cex=0.9,
plot.params = pp),
nparts <- names(segD),
for(i in seq_along(nparts)) {
CNV_D <- segD[[i]]
at <- autotrack(i,length(nparts),margin = 0.05)
kpRect(kp, chr=CNV_D$chr,
x0=CNV_D$start,
x1=CNV_D$end,
y0=0.1, y1=0.85,
border="black",
lty=1, lwd=0.5,
r0=at$r0, r1=at$r1,
col=numbat:::cnv_colors[c(CNV_D$eventType)])
kpRect(kp, chr=CNV_D$chr, x0=0, x1=chrLen[CNV_D$chr], y0=0, y1=1)
}))+
theme(plot.margin=unit(c(0,0.03,0,0), "null"))
ypos=0.42
karyo_cnv <- karyo_cnv+
annotate(geom="text",
x=0.04, y=seq(ypos,ypos+0.31,length.out=length(segD)),
label=c("WGS",ords),
size=rel(2.3),
color="black",hjust = 0,fontface="bold")
karyo_cnv
wgs_df <- fread("intmd/patA_wgs_seg.tsv")
wgs_df
dirs <- fs::dir_ls(path = "benchmark",
regexp = "patA_bin\\d+kb_outputs$",
type = "directory")
numbat_segL <- dirs %>%
set_names(~stringr::str_extract(.x, "bin\\d+kb")) %>%
map(~{
file_path <- file.path(.x, "segs_consensus_2.tsv")
if (file.exists(file_path)) {
readr::read_tsv(file_path, show_col_types = FALSE) %>%
select(chr = CHROM, start = seg_start, end = seg_end,
eventType = cnv_state_post) %>%
mutate(chr = paste0("chr", chr))
} else {
NULL
}
}) %>%
compact()
ords <- paste0("bin",c(50,80,100,200,300,500),"kb")
segD <- c(list("WGS"=wgs_df),numbat_segL[ords])
chrLen <- numbat::chrom_sizes_hg38$size %>%
setNames(paste0("chr",numbat::chrom_sizes_hg38$CHROM))
pp <- getDefaultPlotParams(1)
pp$data2height <- 50
karyo_cnv <- as.ggplot(expression(
kp <- plotKaryotype(plot.type=2, chromosomes=c("chr7"),
cex=0.9,
plot.params = pp),
nparts <- names(segD),
for(i in seq_along(nparts)) {
CNV_D <- segD[[i]]
at <- autotrack(i,length(nparts),margin = 0.05)
kpRect(kp, chr=CNV_D$chr,
x0=CNV_D$start,
x1=CNV_D$end,
y0=0.1, y1=0.85,
border="black",
lty=1, lwd=0.5,
r0=at$r0, r1=at$r1,
col=numbat:::cnv_colors[c(CNV_D$eventType)])
kpRect(kp, chr=CNV_D$chr, x0=0, x1=chrLen[CNV_D$chr], y0=0, y1=1)
}))+
theme(plot.margin=unit(c(0,0.03,0,0), "null"))
ypos=0.42
karyo_cnv <- karyo_cnv+
annotate(geom="text",
x=0.04, y=seq(ypos,ypos+0.31,length.out=length(segD)),
label=c("WGS",ords),
size=rel(2.3),
color="black",hjust = 0,fontface="bold")
karyo_cnv
segD
source("utils/mini_import.R")
source("utils/vis.R")
pacman::p_load(karyoploteR,
ggplotify,ggplot2,cowplot,
ggpubr)
wgs_df <- fread("intmd/patA_wgs_seg.tsv")
dirs <- fs::dir_ls(path = "benchmark",
regexp = "patA_bin\\d+kb_outputs$",
type = "directory")
numbat_segL <- dirs %>%
set_names(~stringr::str_extract(.x, "bin\\d+kb")) %>%
map(~{
file_path <- file.path(.x, "segs_consensus_2.tsv")
if (file.exists(file_path)) {
readr::read_tsv(file_path, show_col_types = FALSE) %>%
select(chr = CHROM, start = seg_start, end = seg_end,
eventType = cnv_state_post) %>%
mutate(chr = paste0("chr", chr))
} else {
NULL
}
}) %>%
compact()
ords <- paste0("bin",c(50,80,100,200,300,500),"kb")
segD <- c(list("WGS"=wgs_df),numbat_segL[ords])
chrLen <- numbat::chrom_sizes_hg38$size %>%
setNames(paste0("chr",numbat::chrom_sizes_hg38$CHROM))
pp <- getDefaultPlotParams(1)
pp$data2height <- 50
karyo_cnv <- as.ggplot(expression(
kp <- plotKaryotype(plot.type=2, chromosomes=c("chr7"),
cex=0.9,
plot.params = pp),
nparts <- names(segD),
for(i in seq_along(nparts)) {
CNV_D <- segD[[i]]
at <- autotrack(i,length(nparts),margin = 0.05)
kpRect(kp, chr=CNV_D$chr,
x0=CNV_D$start,
x1=CNV_D$end,
y0=0.1, y1=0.85,
border="black",
lty=1, lwd=0.5,
r0=at$r0, r1=at$r1,
col=numbat:::cnv_colors[c(CNV_D$eventType)])
kpRect(kp, chr=CNV_D$chr, x0=0, x1=chrLen[CNV_D$chr], y0=0, y1=1)
}))+
theme(plot.margin=unit(c(0,0.03,0,0), "null"))
ypos=0.42
karyo_cnv <- karyo_cnv+
annotate(geom="text",
x=0.04, y=seq(ypos,ypos+0.31,length.out=length(segD)),
label=c("WGS",ords),
size=rel(2.3),
color="black",hjust = 0,fontface="bold")
karyo_cnv
source("utils/mini_import.R")
source("utils/vis.R")
pacman::p_load(karyoploteR,
ggplotify,ggplot2,cowplot,
ggpubr)
wgs_df <- fread("intmd/patA_wgs_seg.tsv")
dirs <- fs::dir_ls(path = "benchmark",
regexp = "patA_bin\\d+kb_outputs$",
type = "directory")
numbat_segL <- dirs %>%
set_names(~stringr::str_extract(.x, "bin\\d+kb")) %>%
map(~{
file_path <- file.path(.x, "segs_consensus_2.tsv")
if (file.exists(file_path)) {
readr::read_tsv(file_path, show_col_types = FALSE) %>%
select(chr = CHROM, start = seg_start, end = seg_end,
eventType = cnv_state_post) %>%
mutate(chr = paste0("chr", chr))
} else {
NULL
}
}) %>%
compact()
ords <- paste0("bin",c(50,80,100,200,300,500),"kb")
segD <- c(list("WGS"=wgs_df),numbat_segL[ords])
chrLen <- numbat::chrom_sizes_hg38$size %>%
setNames(paste0("chr",numbat::chrom_sizes_hg38$CHROM))
pp <- getDefaultPlotParams(1)
pp$data2height <- 50
karyo_cnv <- as.ggplot(expression(
kp <- plotKaryotype(plot.type=2, chromosomes=c("chr7"),
cex=0.9,
plot.params = pp),
nparts <- names(segD),
for(i in seq_along(nparts)) {
CNV_D <- segD[[i]]
at <- autotrack(i,length(nparts),margin = 0.05)
kpRect(kp, chr=CNV_D$chr,
x0=CNV_D$start,
x1=CNV_D$end,
y0=0.1, y1=0.85,
border="black",
lty=1, lwd=0.5,
r0=at$r0, r1=at$r1,
col=numbat:::cnv_colors[c(CNV_D$eventType)])
kpRect(kp, chr=CNV_D$chr, x0=0, x1=chrLen[CNV_D$chr], y0=0, y1=1)
}))+
theme(plot.margin=unit(c(0,0.03,0,0), "null"))
ypos=0.42
karyo_cnv <- karyo_cnv+
annotate(geom="text",
x=0.04, y=seq(ypos,ypos+0.31,length.out=length(segD)),
label=c("WGS",ords),
size=rel(2.3),
color="black",hjust = 0,fontface="bold")
karyo_cnv
source("utils/mini_import.R")
source("utils/vis.R")
pacman::p_load(karyoploteR,
ggplotify,ggplot2,cowplot,
ggpubr)
wgs_df <- fread("intmd/patA_wgs_seg.tsv")
dirs <- fs::dir_ls(path = "benchmark",
regexp = "patA_bin\\d+kb_outputs$",
type = "directory")
numbat_segL <- dirs %>%
set_names(~stringr::str_extract(.x, "bin\\d+kb")) %>%
map(~{
file_path <- file.path(.x, "segs_consensus_2.tsv")
if (file.exists(file_path)) {
readr::read_tsv(file_path, show_col_types = FALSE) %>%
select(chr = CHROM, start = seg_start, end = seg_end,
eventType = cnv_state_post) %>%
mutate(chr = paste0("chr", chr))
} else {
NULL
}
}) %>%
compact()
ords <- paste0("bin",c(50,80,100,200,300,500),"kb")
segD <- c(list("WGS"=wgs_df),numbat_segL[ords])
chrLen <- numbat::chrom_sizes_hg38$size %>%
setNames(paste0("chr",numbat::chrom_sizes_hg38$CHROM))
pp <- getDefaultPlotParams(1)
pp$data2height <- 50
karyo_cnv <- as.ggplot(expression(
kp <- plotKaryotype(plot.type=2, chromosomes=c("chr7"),
cex=0.9,
plot.params = pp),
nparts <- names(segD),
for(i in seq_along(nparts)) {
CNV_D <- segD[[i]]
at <- autotrack(i,length(nparts),margin = 0.05)
kpRect(kp, chr=CNV_D$chr,
x0=CNV_D$start,
x1=CNV_D$end,
y0=0.1, y1=0.85,
border="black",
lty=1, lwd=0.5,
r0=at$r0, r1=at$r1,
col=numbat:::cnv_colors[c(CNV_D$eventType)])
kpRect(kp, chr=CNV_D$chr, x0=0, x1=chrLen[CNV_D$chr], y0=0, y1=1)
}))+
theme(plot.margin=unit(c(0,0.03,0,0), "null"))
ypos=0.42
karyo_cnv <- karyo_cnv+
annotate(geom="text",
x=0.04, y=seq(ypos,ypos+0.31,length.out=length(segD)),
label=c("WGS",ords),
size=rel(2.3),
color="black",hjust = 0,fontface="bold")
karyo_cnv
bin_counts <- readRDS("benchmark/patA_bin200kb_inputs/bin200kb_comb_bincnt.rds")
write_csv(as.data.frame(bin_counts), "bin_counts_for_python.csv")
# Load required library
library(readr)
# 1. Read the bin count matrix from RDS
bin_counts <- readRDS("benchmark/patA_bin200kb_inputs/bin200kb_comb_bincnt.rds")
write_csv(as.data.frame(bin_counts), "congasp/bin_counts_python.csv")
# 1. Read the bin count matrix from RDS
bin_counts <- readRDS("benchmark/patA_bin200kb_inputs/bin200kb_comb_bincnt.rds")  # replace with your file name
bin_counts_dense <- as.matrix(bin_counts)
bin_counts_df <- as.data.frame(bin_counts_dense)
# 3. Write the count matrix as CSV (rows = bins, columns = cells)
write_csv(bin_counts_df, "bin_counts_for_python.csv")
getwd()
# 3. Write the count matrix as CSV (rows = bins, columns = cells)
write_csv(bin_counts_df, "congasp/bin_counts_for_python.csv")
# 4. Write the bin/segment names (if rownames are bins)
if (!is.null(rownames(bin_counts))) {
bins <- rownames(bin_counts)
} else {
bins <- paste0("bin", seq_len(nrow(bin_counts)))
}
write_csv(data.frame(bin=bins), "congasp/bin_segments.csv")
# 5. Write the ploidy/prior file (all 2s, one per bin)
ploidy <- rep(2, length(bins))
write_csv(data.frame(bin=bins, ploidy=ploidy), "congasp/bin_ploidy.csv")
getwde()
getwd()
